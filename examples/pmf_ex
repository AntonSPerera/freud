freud::trajectory::TrajectoryXMLDCD freud::pmft::PMFXY2D
# Due to deficiencies in doxygen, the classes that this provides examples are listed explicitly here
# run this script with "python -x filename" to skip the first line, or remove this header

# ---- pmf_ex.py ----
from freud import trajectory
from freud import pmft

# read in a .dcd trajectory
traj = trajectory.TrajectoryXMLDCD('start.xml', 'dump.dcd')

# initialize the RDF computation using the simulation box from frame 0 (assumes constant volume)
f = traj[0]
pcf = pmft.PMFXY2D(box=f.box,maxX=3.0,maxY=3.0,dx=0.01,dy=0.01)

# loop over all frames in the trajectory and add up a total rdf
for f in traj:
    pos = numpy.copy(f.get("position"))
    pos[:,2] = 0
    ang = numpy.copy(f.get("position")[:,2])
    pcf.compute(pos, ang, pos, ang);

pcf.calcPMF()
xArray = pcf.xArray
yArray = pcf.yArray
pcfArray = pcf.pcfArray
pmfArray = pcf.pmfArray
avgOccupancy = pcf.avgOccupancy

# x, y, and pcf, pmf are simple numpy arrays, you can save them in a file, perform computations on them,
# or just plot them (matplotlib command shown here)
# not sure if a diff call to imshow is needed...
pyplot.imshow(numpy.flipud(pmfArray),
              extent=[-3, 3, -3, 3],
              interpolation="nearest")
